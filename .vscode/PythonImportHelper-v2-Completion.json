[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "unpack_json",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "path_input",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "keyboard",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "keyboard",
        "description": "keyboard",
        "detail": "keyboard",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "ttk",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "filedialog",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "Add_to_json",
        "kind": 6,
        "importPath": "conf.add_to_json",
        "description": "conf.add_to_json",
        "peekOfCode": "class Add_to_json:\n    json_name:str = 0\n    # имя джсона (присваивается при инициализации)\n    def __init__(self, json_name:str):\n        # присваиваем имя джсона\n        self.json_name = json_name\n        # проверяем текущую директорию, если мы не в conf, переходим\n        if os.getcwd()[-4:len(os.getcwd())] != 'conf':\n            os.chdir('./conf')\n    def check_last_added(self):",
        "detail": "conf.add_to_json",
        "documentation": {}
    },
    {
        "label": "path_input",
        "kind": 2,
        "importPath": "conf.config",
        "description": "conf.config",
        "peekOfCode": "def path_input():\n    path = input(\"select file path: \")\n    slash = '\\\\'\n    path = path.replace(slash,'/' )\n    return path\ndef unpack_json (json_name):\n    with open(json_name, 'r') as f:\n        data = json.load(f)\n        return data\n# print(path)",
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "unpack_jso",
        "kind": 2,
        "importPath": "conf.config",
        "description": "conf.config",
        "peekOfCode": "def unpack_json (json_name):\n    with open(json_name, 'r') as f:\n        data = json.load(f)\n        return data\n# print(path)\n# class edit_config:\n#     def __init__():\nif __name__ == '__main__':\n    # print(path_input())\n    # print(os.system('dir'))",
        "detail": "conf.config",
        "documentation": {}
    },
    {
        "label": "press_keyboard",
        "kind": 2,
        "importPath": "binds",
        "description": "binds",
        "peekOfCode": "def press_keyboard():\n    while True:\n        keyboard.wait(\"9\")\n        subprocess.Popen(r\"C:\\Users\\agesoi\\AppData\\Roaming\\Telegram Desktop\\Telegram.exe\")\npress_keyboard()",
        "detail": "binds",
        "documentation": {}
    },
    {
        "label": "select_file_path",
        "kind": 2,
        "importPath": "window",
        "description": "window",
        "peekOfCode": "def select_file_path():\n    global filepath\n    filepath = filedialog.askopenfilename()\n    print(filepath)\ndef create_bind():\n    btn = ttk.Button(text=\"select file path\", command=select_file_path)\n    btn.pack(anchor=N, padx=6, pady=6)\n    btn = ttk.Button(text=\"input bind\", command=None)\n    btn.pack(anchor=N, padx=6, pady=6)\n    btn = ttk.Button(text=\"Save\")",
        "detail": "window",
        "documentation": {}
    },
    {
        "label": "create_bind",
        "kind": 2,
        "importPath": "window",
        "description": "window",
        "peekOfCode": "def create_bind():\n    btn = ttk.Button(text=\"select file path\", command=select_file_path)\n    btn.pack(anchor=N, padx=6, pady=6)\n    btn = ttk.Button(text=\"input bind\", command=None)\n    btn.pack(anchor=N, padx=6, pady=6)\n    btn = ttk.Button(text=\"Save\")\n    btn.pack(anchor=N, padx=6, pady=6)\nbtn = ttk.Button(text=\"Create bind\", command=create_bind)\nbtn.pack(anchor=N, padx=6, pady=6)\nwindow.mainloop()",
        "detail": "window",
        "documentation": {}
    },
    {
        "label": "window",
        "kind": 5,
        "importPath": "window",
        "description": "window",
        "peekOfCode": "window = Tk()\nwindow.geometry('200x200')\nwindow.resizable(False, False)\nwindow.iconbitmap(default=\"icon.ico\")\nwindow.title('programs_bind')\ndef select_file_path():\n    global filepath\n    filepath = filedialog.askopenfilename()\n    print(filepath)\ndef create_bind():",
        "detail": "window",
        "documentation": {}
    },
    {
        "label": "btn",
        "kind": 5,
        "importPath": "window",
        "description": "window",
        "peekOfCode": "btn = ttk.Button(text=\"Create bind\", command=create_bind)\nbtn.pack(anchor=N, padx=6, pady=6)\nwindow.mainloop()",
        "detail": "window",
        "documentation": {}
    }
]